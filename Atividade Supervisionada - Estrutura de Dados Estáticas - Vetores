#include <stdio.h>
#include <stdlib.h>

// Função para multiplicar os elementos do vetor por X
void multiplicarElementos(int vetor[], int tamanho, int X) {
    for (int i = 0; i < tamanho; i++) {
        vetor[i] *= X;
    }
}

// Função para imprimir o vetor na ordem inversa
void imprimirOrdemInversa(int vetor[], int tamanho) {
    printf("Elementos na ordem inversa:\n");
    for (int i = tamanho - 1; i >= 0; i--) {
        printf("%d ", vetor[i]);
    }
    printf("\n");
}

// Função para ordenar o vetor (usando o algoritmo de ordenação por bolha)
void ordenarVetor(int vetor[], int tamanho) {
    for (int i = 0; i < tamanho - 1; i++) {
        for (int j = 0; j < tamanho - i - 1; j++) {
            if (vetor[j] > vetor[j + 1]) {
                // Trocar vetor[j] e vetor[j + 1]
                int temp = vetor[j];
                vetor[j] = vetor[j + 1];
                vetor[j + 1] = temp;
            }
        }
    }
}

// Função para imprimir o vetor ordenado
void imprimirOrdemOrdenada(int vetor[], int tamanho) {
    printf("Elementos ordenados:\n");
    for (int i = 0; i < tamanho; i++) {
        printf("%d ", vetor[i]);
    }
    printf("\n");
}

int main() {
    int tamanho;
    
    // Solicitar ao usuário o tamanho do vetor
    printf("Digite o tamanho do vetor: ");
    scanf("%d", &tamanho);
    
    int* vetor = (int*)malloc(tamanho * sizeof(int));
    
    if (vetor == NULL) {
        printf("Memória insuficiente!\n");
        return 1;
    }

    // Ler os elementos do vetor
    printf("Digite os %d elementos do vetor:\n", tamanho);
    for (int i = 0; i < tamanho; i++) {
        scanf("%d", &vetor[i]);
    }

    // Solicitar o valor de X
    int X;
    printf("Digite o valor de X para multiplicar os elementos: ");
    scanf("%d", &X);

    // Multiplicar os elementos por X
    multiplicarElementos(vetor, tamanho, X);

    // Imprimir os elementos na ordem inversa
    imprimirOrdemInversa(vetor, tamanho);

    // Ordenar o vetor
    ordenarVetor(vetor, tamanho);

    // Imprimir os elementos ordenados
    imprimirOrdemOrdenada(vetor, tamanho);

    // Liberar a memória alocada
    free(vetor);
    
    return 0;
}
